buildscript {
    ext {
        springBootVersion = '2.3.8.RELEASE'
        queryDslVersion = "4.4.0"
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {url "https://plugins.gradle.org/m2/"  }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE")
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
        classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1'
        classpath 'org.kordamp.gradle:markdown-gradle-plugin:2.2.0'
    }
}
repositories {
    jcenter()
}
allprojects {
    group 'com.rgbitsoft'
    version '1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.kordamp.gradle.markdown'

   sourceCompatibility = 11
    repositories {
        mavenCentral()
        //ojdbc
        maven { url "https://code.lds.org/nexus/content/groups/main-repo"}
    }

    /**
     * 모든 멀티모듈 프로젝트에 공통 의존성
     */
    dependencies {
        implementation 'junit:junit:4.12'
        implementation 'org.projectlombok:lombok:1.18.18'
        compileOnly 'org.projectlombok:lombok:1.18.16'
        annotationProcessor 'org.projectlombok:lombok:1.18.16'
        compile "org.slf4j:slf4j-api"
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
        testCompile group: 'junit', name: 'junit', version: '4.12'

        // spring
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        // https://mvnrepository.com/artifact/com.google.guava/guava
        implementation group: 'com.google.guava', name: 'guava', version: '19.0'

    }

// 해당 task로 서브 모듈 추가시 기초적인 디렉토리를 자동으로 생성해줍니다.
    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
    task cleanGeneatedDir(type: Delete) {
        delete file('src/main/generated')
    }
}


project(':module-exam') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation group: 'commons-codec', name: 'commons-codec', version: '1.9'
    }
}

project(':module-lib'){
    apply plugin: 'antlr'
    apply plugin: 'maven-publish'
    dependencies {
        implementation 'com.google.code.gson:gson:2.8.6'
        implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
        implementation group: 'com.jcraft', name: 'jsch', version: '0.1.54'
        implementation group: 'commons-codec', name: 'commons-codec', version: '1.9'

        // markdown
        implementation group: 'org.commonmark', name: 'commonmark', version: '0.18.1'
        implementation group: 'org.commonmark', name: 'commonmark-ext-heading-anchor', version: '0.18.1'
        implementation group: 'org.commonmark', name: 'commonmark-ext-gfm-tables', version: '0.18.1'
        implementation group: 'org.commonmark', name: 'commonmark-ext-gfm-strikethrough', version: '0.18.1'
        implementation group: 'org.commonmark', name: 'commonmark-ext-task-list-items', version: '0.18.1'


        antlr "org.antlr:antlr4:4.8-1"
        compile "org.antlr:antlr4-runtime:4.8-1"
    }
    // antlr generater
    generateGrammarSource {
        arguments += [
                "-visitor", "-long-messages"
        ]
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java
                }
            }
        }
    }
}




/**
 * 스프링 Data JPA/QueryDSL
 */
project(':module-data') {
    dependencies {
        // JPA
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        // queryDsl
        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
        implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
        annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        // H2
        runtimeOnly 'com.h2database:h2'
//        compile 'com.oracle:ojdbc6:11.2.0.3'
    }
}


/**
 * 검색엔진 / 한글 형태소 분석기
 */
project(':module-engine'){
    dependencies {
        compile project(':module-data')
        compile 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
        compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.7.0'
        compile 'org.elasticsearch.client:elasticsearch-rest-client:7.7.0'
        compile 'org.elasticsearch:elasticsearch:7.7.0'
        // https://mvnrepository.com/artifact/org.apache.lucene/lucene-core
        implementation group: 'org.apache.lucene', name: 'lucene-core', version: '7.7.0'
    }
}

// Cache
project(':module-cache'){
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'it.ozimov:embedded-redis:0.7.2'
    }
}
/**
 * 스프링 시큐리티 / 로그인 인증모듈
 */
project(':module-security') {
    dependencies {
        compile project(':module-data')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        // https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
//        implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.1.1.RELEASE'

//        implementation 'io.jsonwebtoken:jjwt:0.11.1'
        compile('io.jsonwebtoken:jjwt-api:0.11.1')
        runtime('io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1')
    }
}

project(':web-core') {
    dependencies {
        implementation group: 'org.graalvm.js', name: 'js', version: '19.2.0'
        implementation group: 'org.graalvm.js', name: 'js-scriptengine', version: '19.2.0'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-configuration-processor'
    }
}
project(':web-admin') {
    dependencies {

    }
}

project(':web-app') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        compile project(':web-core')
        compile project(':module-cache')
        compile project(':module-data')
    //  compile project(':module-security')
    //    compile project(':module-engine')
    }
}
